import itertools

class Solution:
    def perimeter(self, x, y, z):
        if (x + y) > z and (x + z) > y and (z + y) > x:
            return x + y + z
        else:
            return 0
    def largestPerimeter(self, A):
        return (max(self.perimeter(*triangle) for triangle in itertools.combinations(A, 3)))

if __name__ == '__main__':
	s = Solution()
	print(s.largestPerimeter(A=[260318,833310,915317,132443,171985,926435,77036,99099,236978,961229,39004,986277,605451,294419,
		687921,189987,217625,123472,238857,813620,508593,561489,487326,690513,57665,282320,338487,669746,826641,953494,656869,
		69260,404982,325324,173267,178254,58130,434365,203944,131349,540812,304242,765614,431551,247611,939790,237253,512943,
		279527,618108,392578,143817,828057,300391,876376,971398,256744,828230,195701,682772,172046,308497,445628,952708,844116,
		815206,489482,709905,934633,300606,1797,949550,401091,28423,988538,242662,74099,430080,191273,787903,860369,380329,706080,
		520381,311943,458676,917916,415401,47738,124694,747558,998172,428591,975611,600955,105722,878415,883747,
		317297,890877,312313,673054,870936,136610,149099,117921,323181,209112,765149,414883,448149,365233,690914,657019,449965,
		890361,961166,703661,24608,736376,518245,615474,122216,305809,140233,454491,566737,135725,77771,231430,777663,946254,
		693829,27981,227992,711704,276712,997622,467658,88519,635393,759744,710806,914483,161061,600984,669874,429519,69286,
		397512,376755,482078,339901,460248,78679,249931,173541,730598,640404,584389,458778,47960,369692,744514,450413,199966,
		39511,508115,735678,82395,329790,626947,920227,81671,131575,485220,343931,730039,970769,476062,464402,80770,663312,
		252520,618837,239352,199543,155835,880752,380656,798205,588094,889915,217160,84105,497752,269953,249714,794161,682734,
		699389,562218,392533,312016,856340,586391,456008,434001,165875,511553,354737,959244,777986,912672,257107,295487,
		402536,570508,326342,534968,332638,962046,145717,228532,560037,618911,985313,682883,774820,86524,354141,493245,823990,
		23889,249470,240422,377317,810465,934430,600924,270387,841059,817814,874078,646778,431665,425436,962643,247390,661794,
		398621,701347,638739,349654,802750,37512,267606,583811,330091,992908,761832,762783,811840,84452,803802,438756,330924,
		896374,575255,471992,969513,731475,917506,636610,845814,133994,988013,31588,5812,528636,321265,103708,68585,906641,
		924749,178085,436840,833840,76417,212640,29781,632153,316897,363662,557460,141349,618311,311376,805905,760992]))